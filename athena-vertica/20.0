# Run this script from any directory:
# 1. Builds the maven project, if needed.
# 2. Simulates an Athena query running against your connector that is deployed as a Lambda function.
#
# NOTE: That this test may cause a full table scan against your data source. If prompted to provide a
# query predicate, doing so will avoid a full table scan. You can also opt to stop the simulated query
# after the 'planning phase' so that it does not simulate process any splits.
#
# Use the -h or --help args to print usage information.
#
# Use 'yes | tools/validate_connector.sh [args]' to bypass this check. USE CAUTION
#
Proceeding...
athena-federation-sdk-tools is already built, skipping compilation.
2020-07-03 01:25:32  INFO  ConnectorValidator:453 - Received arguments: --lambda-func
2020-07-03 01:25:32  INFO  ConnectorValidator:347 - ==================================================
2020-07-03 01:25:32  INFO  ConnectorValidator:348 - Testing SHOW DATABASES
2020-07-03 01:25:32  INFO  ConnectorValidator:349 - ==================================================
2020-07-03 01:25:32  INFO  LambdaMetadataProvider:71 - Submitting ListSchemasRequest with ID b8a6a573-49f1-4016-a130-284eb20aa296_validation
2020-07-03 01:25:32  INFO  LambdaMetadataProvider:75 - Submitting request: ListSchemasRequest{queryId=b8a6a573-49f1-4016-a130-284eb20aa296_validation}
2020-07-03 01:25:32  WARN  BasicProfileConfigLoader:96 - Your profile name includes a 'profile ' prefix. This is considered part of the profile name in the Java SDK, so you will need to include this prefix in your profile name when you reference this profile from your Java code.
2020-07-03 01:25:32  WARN  BasicProfileConfigLoader:96 - Your profile name includes a 'profile ' prefix. This is considered part of the profile name in the Java SDK, so you will need to include this prefix in your profile name when you reference this profile from your Java code.
2020-07-03 01:25:33  INFO  FederationServiceProvider:72 - SerDe version for function v57, catalog v57 is 2
2020-07-03 01:25:33  INFO  LambdaMetadataProvider:77 - Received response: ListSchemasResponse{schemas=[CLICKSTREAM, kmeans_wheat, linreg, logisticreg, schema1]}
2020-07-03 01:25:33  INFO  ConnectorValidator:180 - Found databases: [CLICKSTREAM, kmeans_wheat, linreg, logisticreg, schema1]
2020-07-03 01:25:33  INFO  ConnectorValidator:106 - Using database schema1
2020-07-03 01:25:33  INFO  ConnectorValidator:347 - ==================================================
2020-07-03 01:25:33  INFO  ConnectorValidator:348 - Testing SHOW TABLES IN schema1
2020-07-03 01:25:33  INFO  ConnectorValidator:349 - ==================================================
2020-07-03 01:25:33  INFO  LambdaMetadataProvider:100 - Submitting ListTablesRequest with ID 5b335905-8dfe-4618-9217-813c8eb53e61_validation
2020-07-03 01:25:33  INFO  LambdaMetadataProvider:104 - Submitting request: ListTablesRequest{queryId=5b335905-8dfe-4618-9217-813c8eb53e61_validation, schemaName='schema1'}
2020-07-03 01:25:33  INFO  LambdaMetadataProvider:106 - Received response: ListTablesResponse{tables=[TableName{schemaName=schema1, tableName=employees}]}
2020-07-03 01:25:33  INFO  ConnectorValidator:199 - Found tables: [schema1.employees]
2020-07-03 01:25:33  INFO  ConnectorValidator:116 - Using table schema1.employees
2020-07-03 01:25:33  INFO  ConnectorValidator:347 - ==================================================
2020-07-03 01:25:33  INFO  ConnectorValidator:348 - Testing DESCRIBE schema1.employees
2020-07-03 01:25:33  INFO  ConnectorValidator:349 - ==================================================
2020-07-03 01:25:33  INFO  LambdaMetadataProvider:129 - Submitting GetTableRequest with ID 479b7ed3-c471-4194-a6bb-cc1e8d14d1b4_validation
2020-07-03 01:25:33  INFO  LambdaMetadataProvider:133 - Submitting request: GetTableRequest{queryId=479b7ed3-c471-4194-a6bb-cc1e8d14d1b4_validation, tableName=TableName{schemaName=schema1, tableName=employees}}
2020-07-03 01:25:33  INFO  LambdaMetadataProvider:135 - Received response: GetTableResponse{tableName=TableName{schemaName=schema1, tableName=employees}, schema=Schema<emp_id: Int(32, true), emp_name: Utf8, emp_city: Utf8, job_name: Utf8, sal: Decimal(10, 2), dep_id: Utf8, mgr: Utf8>, partitionColumns=[], requestType=GET_TABLE, catalogName=v57}
2020-07-03 01:25:33  INFO  ConnectorValidator:347 - ==================================================
2020-07-03 01:25:33  INFO  ConnectorValidator:348 - Testing SELECT * FROM schema1.employees
2020-07-03 01:25:33  INFO  ConnectorValidator:349 - ==================================================
2020-07-03 01:25:33  ERROR ConnectorValidator:361 - ==================================================
2020-07-03 01:25:33  ERROR ConnectorValidator:362 - Error Encountered During Validation!
java.lang.IllegalStateException: No operators found in constraint string 'sal'! Allowable operators are [=, !=, >, >=, <, <=]
	at com.google.common.base.Preconditions.checkState(Preconditions.java:504) ~[athena-federation-sdk-tools-1.0-withdep.jar:?]
	at com.amazonaws.athena.connector.validation.ConstraintParser.parseAndAddConstraint(ConstraintParser.java:162) ~[athena-federation-sdk-tools-1.0-withdep.jar:?]
	at com.amazonaws.athena.connector.validation.ConstraintParser.lambda$parseConstraints$0(ConstraintParser.java:146) ~[athena-federation-sdk-tools-1.0-withdep.jar:?]
	at java.lang.Iterable.forEach(Iterable.java:75) ~[?:1.8.0_231]
	at com.amazonaws.athena.connector.validation.ConstraintParser.parseConstraints(ConstraintParser.java:146) ~[athena-federation-sdk-tools-1.0-withdep.jar:?]
	at com.amazonaws.athena.connector.validation.ConnectorValidator.getTableLayout(ConnectorValidator.java:247) [athena-federation-sdk-tools-1.0-withdep.jar:?]
	at com.amazonaws.athena.connector.validation.ConnectorValidator.main(ConnectorValidator.java:126) [athena-federation-sdk-tools-1.0-withdep.jar:?]
2020-07-03 01:25:33  ERROR ConnectorValidator:363 - ==================================================
